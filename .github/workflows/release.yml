###############################################################
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

name: release

on:
  push:
    tags:
      - 'v*.*.*'
      - '!v*.*.*-RC*'
  workflow_dispatch:

env:
  IMAGE_NAMESPACE: 'tractusx'
  IMAGE_NAME: 'portal-assets'
  REF_NAME: '${{ github.ref_name }}'
  # variables needed for scripts/legal-notice.sh
  SERVER_URL: '${{ github.server_url }}'
  REPOSITORY: '${{ github.repository }}'

jobs:
  build-and-push-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Get npm version
        id: npm-tag
        uses: martinbeentjes/npm-get-version-action@3cf273023a0dda27efcd3164bdfb51908dd46a5b # v1.3.1

      - name: Output versions
        run: |
          echo git ${{ env.REF_NAME }}
          echo npm ${{ steps.npm-tag.outputs.current-version }}

      - name: Versions not matching
        if: env.REF_NAME != steps.npm-tag.outputs.current-version
        run: |
          echo git and npm versions not equal - refusing to build release
          exit 1

      - name: Versions match
        run: |
          echo versions equal - building release ${{ env.REF_NAME }}

      - name: Install Dependencies
        run: yarn

      - name: Create release version metadata
        run: yarn build:release ${{ env.REF_NAME }}

      - name: Add content to Legal Notice
        run: yarn build:legal-notice

      - name: Build Application
        run: yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images:
            ${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}
            # Automatically prepare image tags;
            # semver patter will generate tags like these for example :v1 :v1.2 v1.2.3
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.REF_NAME }}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          file: .conf/Dockerfile
          platforms: linux/amd64, linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # https://github.com/peter-evans/dockerhub-description
      - name: Update Docker Hub description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4.0.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: ${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}
          readme-filepath: '.conf/notice-assets.md'

  auth-and-dispatch:
    needs: build-and-push-release
    runs-on: ubuntu-latest

    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${{ env.REF_NAME }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Check for hotfix version
        id: hf-check
        run: |
          hf=$(git ls-remote --heads origin "hotfix/${{ env.REF_NAME }}*")
          if [[ -n "$hf" ]]; then
            echo "hf=true" >> $GITHUB_OUTPUT
          else
            echo "hf=false" >> $GITHUB_OUTPUT
          fi

      - name: Get tags
        run: git fetch --tags --force
        if: steps.hf-check.outputs.hf == 'false'

      - name: Check for previous release candidate version
        id: rc-check
        run: |
          rc=$(git tag -l "${{ env.REF_NAME }}-RC*")
          if [[ -n "$rc" ]]; then
            echo "rc=true" >> $GITHUB_OUTPUT
          else
            echo "rc=false" >> $GITHUB_OUTPUT
          fi
        if: steps.hf-check.outputs.hf == 'false'

      - name: Determine branch to update in portal repository
        id: cd-branch
        run: |
          if [[ ${{ steps.rc-check.outputs.rc }} == 'true' ]]; then
            echo "branch=release-candidate" >> $GITHUB_OUTPUT
          else
            echo "branch=main" >> $GITHUB_OUTPUT
          fi
        if: steps.hf-check.outputs.hf == 'false'

      - name: Get token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@dc0413987a085fa17d19df9e47d4677cf81ffef3 # v3.0.0
        with:
          application_id: ${{ secrets.ORG_PORTAL_DISPATCH_APPID }}
          application_private_key: ${{ secrets.ORG_PORTAL_DISPATCH_KEY }}
        if: steps.hf-check.outputs.hf == 'false'

      - name: Trigger workflow
        id: call_action
        env:
          TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: |
          curl -v \
            --request POST \
            --url https://api.github.com/repos/eclipse-tractusx/portal/actions/workflows/portal-assets-image-update.yml/dispatches \
            --header "authorization: Bearer $TOKEN" \
            --header "Accept: application/vnd.github.v3+json" \
            --data '{"ref":"${{ steps.cd-branch.outputs.branch }}", "inputs": { "new-image":"${{ env.REF_NAME }}" }}' \
            --fail
        if: steps.hf-check.outputs.hf == 'false'
